#!/bin/bash
 
NAME="openprescribing_prod"                                  # Name of the application
DJANGODIR=/webapps/openprescribing/openprescribing             # Django project directory
SOCKFILE=/webapps/openprescribing/run/gunicorn.sock  # we will communicte using this unix socket
USER=hello                                        # the user to run as
GROUP=www-data                                    # the group to run as
NUM_WORKERS=6                                     # how many worker processes should Gunicorn spawn
DJANGO_SETTINGS_MODULE=openprescribing.settings.production             # which settings file should Django use
DJANGO_WSGI_MODULE=openprescribing.wsgi                     # WSGI module name
LOGFILE=/webapps/openprescribing/logs/gunicorn-error.log
ACCESS_LOGFILE=/webapps/openprescribing/logs/gunicorn-access.log
TIMEOUT=60
 
echo "Starting $NAME as `whoami`"
echo "Env variable $GMAIL_PASS"
echo "DB_USER $DB_USER"
echo "Test env variable $TEST1" 
# Activate the virtual environment
cd $DJANGODIR
source ../.venv/bin/activate
export DJANGO_SETTINGS_MODULE=$DJANGO_SETTINGS_MODULE
export PYTHONPATH=$DJANGODIR:$PYTHONPATH
export NEW_RELIC_CONFIG_FILE=/webapps/openprescribing/newrelic.ini 
export NEW_RELIC_ENVIRONMENT=production
export NEW_RELIC_LICENSE_KEY=ZZZZZZ
# Create the run directory if it doesn't exist
RUNDIR=$(dirname $SOCKFILE)
test -d $RUNDIR || mkdir -p $RUNDIR
 
# Start your Django Unicorn
# Programs meant to be run under supervisor should not daemonize themselves (do not use --daemon)
exec newrelic-admin run-program gunicorn ${DJANGO_WSGI_MODULE}:application \
  --name $NAME \
  --workers $NUM_WORKERS \
  --timeout $TIMEOUT \
  --user=$USER --group=$GROUP \
  --bind=unix:$SOCKFILE \
  --log-level=warn \
  --log-file=$LOGFILE \
  --access-logfile=$ACCESS_LOGFILE
