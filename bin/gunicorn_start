#!/bin/bash

set -eo pipefail

ENV=$1

if [[ $ENV != "production" && $ENV != "staging" ]]
then
  echo '$ENV must be "production" or "staging"'
  exit 1
fi

NAME="openprescribing_$ENV"

# REPO_ROOT and APPS_ROOT match definitions in settings
REPO_ROOT=$(dirname $(dirname $0))
APPS_ROOT="$REPO_ROOT/openprescribing"

RUNDIR="$REPO_ROOT/run"
LOGDIR="$REPO_ROOT/logs"

# Create the run and logs directories if they don't exist
mkdir -p $RUNDIR
mkdir -p $LOGDIR

SOCKFILE="$RUNDIR/gunicorn.sock"
LOGFILE="$LOGDIR/gunicorn-error.log"
ACCESS_LOGFILE="$LOGDIR/gunicorn-access.log"

# Export environment variables that depend on $ENV
export DJANGO_SETTINGS_MODULE="openprescribing.settings.$ENV"
export PYTHONPATH=$APPS_ROOT:$PYTHONPATH
export NEW_RELIC_CONFIG_FILE="$REPO_ROOT/newrelic.ini"
export NEW_RELIC_ENVIRONMENT=$ENV

echo "Starting $NAME"
echo "whoami: $(whoami)"
echo "ENV: $ENV"
echo "REPO_ROOT: $REPO_ROOT"
echo "APPS_ROOT: $APPS_ROOT"
echo "PYTHONPATH: $PYTHONPATH"

# Source environment file
source "$REPO_ROOT/environment"

# Activate the virtual environment
source "$VIRTUALENV_PATH/bin/activate"

# Start gunicorn via newrelic-admin
cmd="newrelic-admin run-program gunicorn openprescribing.wsgi:application \
  --name $NAME \
  --bind=unix:$SOCKFILE \
  --workers $GUNICORN_NUM_WORKERS \
  --timeout $GUNICORN_TIMEOUT \
  --log-level=$GUNICORN_LOG_LEVEL \
  --log-file=$LOGFILE \
  --access-logfile=$ACCESS_LOGFILE"

if [[ ! -z $CHECK_CONFIG ]]; then
    cmd="$cmd --check-config"
fi

exec $cmd
