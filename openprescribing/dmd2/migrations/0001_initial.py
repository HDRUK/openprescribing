# -*- coding: utf-8 -*-
# Generated by Django 1.11.15 on 2018-09-26 18:03
from __future__ import unicode_literals

from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='AMP',
            fields=[
                ('id', models.BigIntegerField(db_column=b'apid', help_text=b'AMP identifier', primary_key=True, serialize=False)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('nm', models.CharField(help_text=b'AMP Name', max_length=255)),
                ('abbrevnm', models.CharField(help_text=b'AMP Abbreviated name', max_length=60, null=True)),
                ('descr', models.CharField(help_text=b'Description', max_length=700)),
                ('nmdt', models.DateField(help_text=b'Date of name applicability', null=True)),
                ('nm_prev', models.CharField(help_text=b'Previous Name', max_length=255, null=True)),
                ('lic_authchangedt', models.DateField(help_text=b'Date of change of licensing authority', null=True)),
                ('ema', models.BooleanField(help_text=b'EMA Additional Monitoring')),
                ('parallel_import', models.BooleanField(help_text=b'Parallel Import')),
            ],
        ),
        migrations.CreateModel(
            name='AMPP',
            fields=[
                ('id', models.BigIntegerField(db_column=b'appid', help_text=b'AMPP identifier', primary_key=True, serialize=False)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('nm', models.CharField(help_text=b'AMPP description', max_length=774)),
                ('abbrevnm', models.CharField(help_text=b'AMPP Abbreviated Name', max_length=60, null=True)),
                ('subp', models.CharField(help_text=b'Sub Pack Info', max_length=30, null=True)),
                ('discdt', models.DateField(help_text=b'Discontinued Flag Change date', null=True)),
                ('amp', models.ForeignKey(db_column=b'apid', help_text=b'AMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMP')),
            ],
        ),
        migrations.CreateModel(
            name='ApInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sz_weight', models.CharField(help_text=b'Size / Weight', max_length=100, null=True)),
                ('prod_order_no', models.CharField(help_text=b'Product order number', max_length=20, null=True)),
                ('amp', models.OneToOneField(db_column=b'apid', help_text=b'AMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMP')),
            ],
        ),
        migrations.CreateModel(
            name='ApIng',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('strnth', models.DecimalField(decimal_places=3, help_text=b'Pharmaceutical strength numerical value', max_digits=10, null=True)),
                ('amp', models.ForeignKey(db_column=b'apid', help_text=b'AMP', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMP')),
            ],
        ),
        migrations.CreateModel(
            name='AvailabilityRestriction',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='BasisOfName',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='BasisOfStrnth',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Colour',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='CombinationPackInd',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='CombinationProdInd',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='ControlDrugCategory',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='ControlInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('catdt', models.DateField(help_text=b'Date of applicability', null=True)),
                ('cat', models.ForeignKey(db_column=b'catcd', help_text=b'Control Drug category', on_delete=django.db.models.deletion.CASCADE, to='dmd2.ControlDrugCategory')),
                ('cat_prev', models.ForeignKey(db_column=b'cat_prevcd', help_text=b'Previous Control Drug Information', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.ControlDrugCategory')),
            ],
        ),
        migrations.CreateModel(
            name='DfIndicator',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=20)),
            ],
        ),
        migrations.CreateModel(
            name='Dform',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='DiscontinuedInd',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Dnd',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Droute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='Dtinfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(help_text=b'Drug Tariff Price', null=True)),
                ('dt', models.DateField(help_text=b'Date from which DT applicable', null=True)),
                ('prevprice', models.IntegerField(help_text=b'Previous price', null=True)),
            ],
        ),
        migrations.CreateModel(
            name='DtPaymentCategory',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Flavour',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Form',
            fields=[
                ('cd', models.BigIntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('cddt', models.DateField(help_text=b'Date code is applicable from', null=True)),
                ('cdprev', models.BigIntegerField(help_text=b'Previous code', null=True)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='GTIN',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('gtin', models.BigIntegerField(help_text=b'GTIN')),
                ('startdt', models.DateField(help_text=b'GTIN date')),
                ('enddt', models.DateField(help_text=b'The date the GTIN became invalid', null=True)),
                ('ampp', models.OneToOneField(db_column=b'appid', help_text=b'AMPP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMPP')),
            ],
        ),
        migrations.CreateModel(
            name='Ing',
            fields=[
                ('id', models.BigIntegerField(db_column=b'isid', help_text=b'Ingredient Substance Identifier', primary_key=True, serialize=False)),
                ('isiddt', models.DateField(help_text=b'Date ingredient substance identifier became valid', null=True)),
                ('isidprev', models.BigIntegerField(help_text=b'Previous ingredient substance identifier', null=True)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('nm', models.CharField(help_text=b'Ingredient Substance Name', max_length=255)),
            ],
        ),
        migrations.CreateModel(
            name='LegalCategory',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='LicensingAuthority',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='LicensingAuthorityChangeReason',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='LicRoute',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('amp', models.ForeignKey(db_column=b'apid', help_text=b'AMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMP')),
            ],
        ),
        migrations.CreateModel(
            name='NamechangeReason',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='Ont',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
            ],
        ),
        migrations.CreateModel(
            name='OntFormRoute',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='PackInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('reimb_statdt', models.DateField(help_text=b'Date Appliance reimbursement status became effective', null=True)),
                ('pack_order_no', models.CharField(help_text=b'Pack order number', max_length=20, null=True)),
                ('ampp', models.OneToOneField(db_column=b'appid', help_text=b'AMPP identifier as in AMPP tag above', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMPP')),
            ],
        ),
        migrations.CreateModel(
            name='PrescribInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('sched_2', models.BooleanField(help_text=b'Schedule 2')),
                ('acbs', models.BooleanField(help_text=b'ACBS')),
                ('padm', models.BooleanField(help_text=b'Personally Administered')),
                ('fp10_mda', models.BooleanField(help_text=b'FP10 MDA Prescription')),
                ('sched_1', models.BooleanField(help_text=b'Schedule 1')),
                ('hosp', models.BooleanField(help_text=b'Hospital')),
                ('nurse_f', models.BooleanField(help_text=b'Nurse Formulary')),
                ('enurse_f', models.BooleanField(help_text=b'Nurse Extended Formulary')),
                ('dent_f', models.BooleanField(help_text=b'Dental Formulary')),
                ('ampp', models.OneToOneField(db_column=b'appid', help_text=b'AMPP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMPP')),
            ],
        ),
        migrations.CreateModel(
            name='PriceBasis',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='PriceInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('price', models.IntegerField(help_text=b'Price', null=True)),
                ('pricedt', models.DateField(help_text=b'Date of price validity', null=True)),
                ('price_prev', models.IntegerField(help_text=b'Price prior to change date', null=True)),
                ('ampp', models.OneToOneField(db_column=b'appid', help_text=b'AMPP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMPP')),
                ('price_basis', models.ForeignKey(db_column=b'price_basiscd', help_text=b'Price basis flag', on_delete=django.db.models.deletion.CASCADE, to='dmd2.PriceBasis')),
            ],
        ),
        migrations.CreateModel(
            name='ReimbInfo',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('px_chrgs', models.IntegerField(help_text=b'Prescription Charges', null=True)),
                ('disp_fees', models.IntegerField(help_text=b'Dispensing Fees', null=True)),
                ('bb', models.BooleanField(help_text=b'Broken Bulk')),
                ('cal_pack', models.BooleanField(help_text=b'Calendar pack')),
                ('fp34d', models.BooleanField(help_text=b'FP34D prescription item')),
                ('ampp', models.OneToOneField(db_column=b'appid', help_text=b'AMPP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AMPP')),
                ('dnd', models.ForeignKey(db_column=b'dndcd', help_text=b'Discount Not Deducted', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.Dnd')),
            ],
        ),
        migrations.CreateModel(
            name='ReimbursementStatus',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Route',
            fields=[
                ('cd', models.BigIntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('cddt', models.DateField(help_text=b'Date code is applicable from', null=True)),
                ('cdprev', models.BigIntegerField(help_text=b'Previous code', null=True)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='SpecCont',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='Supplier',
            fields=[
                ('cd', models.BigIntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('cddt', models.DateField(help_text=b'Date code is applicable from', null=True)),
                ('cdprev', models.BigIntegerField(help_text=b'Previous code', null=True)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('descr', models.CharField(help_text=b'Description', max_length=80)),
            ],
        ),
        migrations.CreateModel(
            name='UnitOfMeasure',
            fields=[
                ('cd', models.BigIntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('cddt', models.DateField(help_text=b'Date code is applicable from', null=True)),
                ('cdprev', models.BigIntegerField(help_text=b'Previous code', null=True)),
                ('descr', models.CharField(help_text=b'Description', max_length=150)),
            ],
        ),
        migrations.CreateModel(
            name='VirtualProductNonAvail',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='VirtualProductPresStatus',
            fields=[
                ('cd', models.IntegerField(help_text=b'Code', primary_key=True, serialize=False)),
                ('descr', models.CharField(help_text=b'Description', max_length=60)),
            ],
        ),
        migrations.CreateModel(
            name='VMP',
            fields=[
                ('id', models.BigIntegerField(db_column=b'vpid', help_text=b'VMP identifier', primary_key=True, serialize=False)),
                ('vpiddt', models.DateField(help_text=b'Date VMP identifier became Valid', null=True)),
                ('vpidprev', models.BigIntegerField(help_text=b'Previous product identifier', null=True)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('nm', models.CharField(help_text=b'VMP Name', max_length=255)),
                ('abbrevnm', models.CharField(help_text=b'VMP Abbreviated name', max_length=60, null=True)),
                ('nmdt', models.DateField(help_text=b'Date of Name applicability', null=True)),
                ('nmprev', models.CharField(help_text=b'Previous Name', max_length=255, null=True)),
                ('sug_f', models.BooleanField(help_text=b'Sugar Free')),
                ('glu_f', models.BooleanField(help_text=b'Gluten Free')),
                ('pres_f', models.BooleanField(help_text=b'Preservative Free')),
                ('cfc_f', models.BooleanField(help_text=b'CFC Free')),
                ('non_availdt', models.DateField(help_text=b'Non availability status date', null=True)),
                ('udfs', models.DecimalField(decimal_places=3, help_text=b'Unit dose form size', max_digits=10, null=True)),
                ('basis', models.ForeignKey(db_column=b'basiscd', help_text=b'Basis of preferred name', on_delete=django.db.models.deletion.CASCADE, to='dmd2.BasisOfName')),
                ('basis_prev', models.ForeignKey(db_column=b'basis_prevcd', help_text=b'Basis of previous name', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.BasisOfName')),
                ('combprod', models.ForeignKey(db_column=b'combprodcd', help_text=b'Combination product', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.CombinationProdInd')),
                ('df_ind', models.ForeignKey(db_column=b'df_indcd', help_text=b'Dose form', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.DfIndicator')),
                ('nmchange', models.ForeignKey(db_column=b'nmchangecd', help_text=b'Reason for name change', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.NamechangeReason')),
                ('non_avail', models.ForeignKey(db_column=b'non_availcd', help_text=b'Non-availability', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.VirtualProductNonAvail')),
                ('pres_stat', models.ForeignKey(db_column=b'pres_statcd', help_text=b'VMP Prescribing Status', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VirtualProductPresStatus')),
                ('udfs_uom', models.ForeignKey(db_column=b'udfs_uomcd', help_text=b'Unit dose form units', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.UnitOfMeasure')),
                ('unit_dose_uom', models.ForeignKey(db_column=b'unit_dose_uomcd', help_text=b'Unit dose unit of measure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.UnitOfMeasure')),
            ],
        ),
        migrations.CreateModel(
            name='VMPP',
            fields=[
                ('id', models.BigIntegerField(db_column=b'vppid', help_text=b'VMPP Identifier', primary_key=True, serialize=False)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('nm', models.CharField(help_text=b'VMPP description', max_length=420)),
                ('qtyval', models.DecimalField(decimal_places=2, help_text=b'Quantity Value', max_digits=10, null=True)),
                ('combpack', models.ForeignKey(db_column=b'combpackcd', help_text=b'Combination pack', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.CombinationPackInd')),
                ('qty_uom', models.ForeignKey(db_column=b'qty_uomcd', help_text=b'Quantity Unit of Measure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.UnitOfMeasure')),
                ('vmp', models.ForeignKey(db_column=b'vpid', help_text=b'VMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP')),
            ],
        ),
        migrations.CreateModel(
            name='VPI',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('bs_subid', models.BigIntegerField(help_text=b'Basis of strength substance identifier', null=True)),
                ('strnt_nmrtr_val', models.DecimalField(decimal_places=3, help_text=b'Strength value numerator', max_digits=10, null=True)),
                ('strnt_dnmtr_val', models.DecimalField(decimal_places=3, help_text=b'Strength value denominator', max_digits=10, null=True)),
                ('basis_strnt', models.ForeignKey(db_column=b'basis_strntcd', help_text=b'Basis of pharmaceutical strength', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.BasisOfStrnth')),
                ('ing', models.ForeignKey(db_column=b'isid', help_text=b'Ingredient substance identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.Ing')),
                ('strnt_dnmtr_uom', models.ForeignKey(db_column=b'strnt_dnmtr_uomcd', help_text=b'Strength value denominator unit', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.UnitOfMeasure')),
                ('strnt_nmrtr_uom', models.ForeignKey(db_column=b'strnt_nmrtr_uomcd', help_text=b'Strength value numerator unit', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.UnitOfMeasure')),
                ('vmp', models.ForeignKey(db_column=b'vpid', help_text=b'VMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP')),
            ],
        ),
        migrations.CreateModel(
            name='VTM',
            fields=[
                ('id', models.BigIntegerField(db_column=b'vtmid', help_text=b'VTM identifier', primary_key=True, serialize=False)),
                ('invalid', models.BooleanField(help_text=b'Invalidity flag')),
                ('nm', models.CharField(help_text=b'VTM Name', max_length=255)),
                ('abbrevnm', models.CharField(help_text=b'VTM Abbreviated name', max_length=60, null=True)),
                ('vtmidprev', models.BigIntegerField(help_text=b'Previous VTM identifier', null=True)),
                ('vtmiddt', models.DateField(help_text=b'VTM Identifier date', null=True)),
            ],
        ),
        migrations.AddField(
            model_name='vmp',
            name='vtm',
            field=models.ForeignKey(db_column=b'vtmid', help_text=b'VTM identifier', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.VTM'),
        ),
        migrations.AddField(
            model_name='reimbinfo',
            name='spec_cont',
            field=models.ForeignKey(db_column=b'spec_contcd', help_text=b'Special Container', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.SpecCont'),
        ),
        migrations.AddField(
            model_name='packinfo',
            name='reimb_stat',
            field=models.ForeignKey(db_column=b'reimb_statcd', help_text=b'Appliance Reimbursement status', on_delete=django.db.models.deletion.CASCADE, to='dmd2.ReimbursementStatus'),
        ),
        migrations.AddField(
            model_name='packinfo',
            name='reimb_statprev',
            field=models.ForeignKey(db_column=b'reimb_statprevcd', help_text=b'Appliance Reimbursement previous status', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.ReimbursementStatus'),
        ),
        migrations.AddField(
            model_name='ont',
            name='form',
            field=models.ForeignKey(db_column=b'formcd', help_text=b'VMP Form & Route', on_delete=django.db.models.deletion.CASCADE, to='dmd2.OntFormRoute'),
        ),
        migrations.AddField(
            model_name='ont',
            name='vmp',
            field=models.ForeignKey(db_column=b'vpid', help_text=b'VMP ID', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP'),
        ),
        migrations.AddField(
            model_name='licroute',
            name='route',
            field=models.ForeignKey(db_column=b'routecd', help_text=b'Licenced route', on_delete=django.db.models.deletion.CASCADE, to='dmd2.Route'),
        ),
        migrations.AddField(
            model_name='dtinfo',
            name='pay_cat',
            field=models.ForeignKey(db_column=b'pay_catcd', help_text=b'Drug Tariff payment category', on_delete=django.db.models.deletion.CASCADE, to='dmd2.DtPaymentCategory'),
        ),
        migrations.AddField(
            model_name='dtinfo',
            name='vmpp',
            field=models.OneToOneField(db_column=b'vppid', help_text=b'VMPP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMPP'),
        ),
        migrations.AddField(
            model_name='droute',
            name='route',
            field=models.ForeignKey(db_column=b'routecd', help_text=b'Route', on_delete=django.db.models.deletion.CASCADE, to='dmd2.Route'),
        ),
        migrations.AddField(
            model_name='droute',
            name='vmp',
            field=models.ForeignKey(db_column=b'vpid', help_text=b'VMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP'),
        ),
        migrations.AddField(
            model_name='dform',
            name='form',
            field=models.ForeignKey(db_column=b'formcd', help_text=b'Formulation', on_delete=django.db.models.deletion.CASCADE, to='dmd2.Form'),
        ),
        migrations.AddField(
            model_name='dform',
            name='vmp',
            field=models.OneToOneField(db_column=b'vpid', help_text=b'VMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP'),
        ),
        migrations.AddField(
            model_name='controlinfo',
            name='vmp',
            field=models.OneToOneField(db_column=b'vpid', help_text=b'VMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP'),
        ),
        migrations.AddField(
            model_name='aping',
            name='ing',
            field=models.ForeignKey(db_column=b'isid', help_text=b'Ingredient substance identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.Ing'),
        ),
        migrations.AddField(
            model_name='aping',
            name='uom',
            field=models.ForeignKey(db_column=b'uomcd', help_text=b'Pharmaceutical Strength Unit of Measure', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.UnitOfMeasure'),
        ),
        migrations.AddField(
            model_name='apinfo',
            name='colour',
            field=models.ForeignKey(db_column=b'colourcd', help_text=b'Colour', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.Colour'),
        ),
        migrations.AddField(
            model_name='ampp',
            name='combpack',
            field=models.ForeignKey(db_column=b'combpackcd', help_text=b'Combination pack', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.CombinationPackInd'),
        ),
        migrations.AddField(
            model_name='ampp',
            name='disc',
            field=models.ForeignKey(db_column=b'disccd', help_text=b'Discontinued Flag', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.DiscontinuedInd'),
        ),
        migrations.AddField(
            model_name='ampp',
            name='legal_cat',
            field=models.ForeignKey(db_column=b'legal_catcd', help_text=b'Legal category', on_delete=django.db.models.deletion.CASCADE, to='dmd2.LegalCategory'),
        ),
        migrations.AddField(
            model_name='ampp',
            name='vmpp',
            field=models.ForeignKey(db_column=b'vppid', help_text=b'VMPP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMPP'),
        ),
        migrations.AddField(
            model_name='amp',
            name='avail_restrict',
            field=models.ForeignKey(db_column=b'avail_restrictcd', help_text=b'Restrictions on availability', on_delete=django.db.models.deletion.CASCADE, to='dmd2.AvailabilityRestriction'),
        ),
        migrations.AddField(
            model_name='amp',
            name='combprod',
            field=models.ForeignKey(db_column=b'combprodcd', help_text=b'Combination product', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.CombinationProdInd'),
        ),
        migrations.AddField(
            model_name='amp',
            name='flavour',
            field=models.ForeignKey(db_column=b'flavourcd', help_text=b'Flavour', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.Flavour'),
        ),
        migrations.AddField(
            model_name='amp',
            name='lic_auth',
            field=models.ForeignKey(db_column=b'lic_authcd', help_text=b'Current Licensing Authority', on_delete=django.db.models.deletion.CASCADE, to='dmd2.LicensingAuthority'),
        ),
        migrations.AddField(
            model_name='amp',
            name='lic_auth_prev',
            field=models.ForeignKey(db_column=b'lic_auth_prevcd', help_text=b'Previous Licensing Authority', null=True, on_delete=django.db.models.deletion.CASCADE, related_name='+', to='dmd2.LicensingAuthority'),
        ),
        migrations.AddField(
            model_name='amp',
            name='lic_authchange',
            field=models.ForeignKey(db_column=b'lic_authchangecd', help_text=b'Reason for change of licensing authority', null=True, on_delete=django.db.models.deletion.CASCADE, to='dmd2.LicensingAuthorityChangeReason'),
        ),
        migrations.AddField(
            model_name='amp',
            name='supp',
            field=models.ForeignKey(db_column=b'suppcd', help_text=b'Supplier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.Supplier'),
        ),
        migrations.AddField(
            model_name='amp',
            name='vmp',
            field=models.ForeignKey(db_column=b'vpid', help_text=b'VMP identifier', on_delete=django.db.models.deletion.CASCADE, to='dmd2.VMP'),
        ),
    ]
